body {
    background-color: #192f5e;
    font-family: sans-serif;
}

/* Step 1: style the showing state of the nav before hiding it. Start with the mobile view */

.flex-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

header {
    padding: 1rem;
    background-color: #fff;
    position: relative;
}

header a {
    color: #3f3f3f;
    text-decoration: none;
    display: block;
    padding: 0.5rem;
}

.menu a:hover,
.menu a:active {
    background-color: gainsboro;
    border-radius: 4px;
}

header li {
    line-height: 40px;
    text-align: center;
}

header button {
    border: none;
    background-color: #fff;
    outline: none;
}

header button:hover {
    cursor: pointer;
}

header svg rect {
    fill: #3f3f3f;
}

/* Step 2: Hide the nav for the default loading screen.  Display: none will not take transitions. Hide by removing the height of the element*/
header nav {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.7s ease-in-out;
    /* add an overlay effect when opened  */
    position: absolute;
    top: 95px;
    left: 0;
    background-color: white;
    width: 100%;
    z-index: 1;
}

/* Step 3: Create a special class that will show the nav. This class name will only exit in the CSS, not the markup - the javascript will do that for us. We'll add that functionality in the main.js file */
.show-nav {
    max-height: 15rem;
}

/* section */
section {
    padding: 3.125rem;
    text-align: center;
    text-transform: uppercase;
}
section p {
    color: #d5e294;
    border-bottom: 2px solid #d5e294;
    padding-bottom: 10px;
    margin-bottom: 10px;
    font-size: 1.777rem;
}
section h2 {
    color: white;
    font-size: 3.157rem;
    margin-bottom: 3.125rem;
}
.gallery img {
    border-radius: 5px;
    margin-bottom: 1rem;
}
.gallery .thumbnail {
    position: relative;
}
.gallery span {
    background-color: #87a6ab;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    color: white;    
    /* position the span over top of the image  */
    position: absolute;
    /* the top, right, bottom, left values will position the item in relation to the screen UNLESS the parent container (.thumbnail) has a position of relative */
    right: -10px;
    top: -20px;
    box-shadow: 2px 2px 5px wheat;
}
/* Step 4: add a media query and show the nav by default (hide the hamburger button and style the nav horizontally) */
@media only screen and (min-width: 35rem) {
    .hamburger-btn {
        display: none;
    }

    /* we want to see the nav, so give it it's height back */
    header nav {
        max-height: 5rem;
        overflow: visible;
        /* change the position back to static (default) and width auto is the content width  */
        position: static;
        width: auto;
    }

    /* change the layout of the nav items */
    .menu,
    header {
        display: flex;
        justify-content: space-between;
    }
}

@media (min-width: 60em) {
    .gallery {
        display: flex;
        flex-flow: wrap;
        justify-content: space-between;
    }
    .thumbnail {
        flex:  0 0 48%;
    }
}